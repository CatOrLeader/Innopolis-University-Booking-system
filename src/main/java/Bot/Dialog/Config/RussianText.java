package Bot.Dialog.Config;

import APIWrapper.Json.Booking;
import APIWrapper.Json.Room;
import APIWrapper.Utilities.DateTime;
import com.pengrad.telegrambot.model.request.InlineKeyboardButton;
import com.pengrad.telegrambot.model.request.InlineKeyboardMarkup;
import com.pengrad.telegrambot.model.request.KeyboardButton;
import com.pengrad.telegrambot.model.request.ReplyKeyboardMarkup;

import java.util.List;

/**
 * Russian bot interface localization.
 */
public class RussianText implements IText {
    @Override
    public String initial() {
        return """
                Hello! Let's start by choosing a language we feel comfortable speaking.
                
                –ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–µ–º —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ –æ–±—â–∞—Ç—å—Å—è.
                """;
    }

    @Override
    public String wrongEmail() {
        return "–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∞—è –ø–æ—á—Ç–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ \uD83D\uDE22 –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥—É—é –µ—â–µ —Ä–∞–∑.";
    }

    @Override
    public String verificationCodeSent() {
        return """
                –ù–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
                –ï–≥–æ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç. –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —ç—Ç–æ—Ç –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\s

                –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∫–∞–∫–∏—Ö-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º.""";
    }

    @Override
    public String verificationCodeWrong() {
        return "–í–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ —Å–Ω–æ–≤–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.";
    }

    @Override
    public String verificationCodeExpired(String email) {
        return String.format("""
                –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏—Å—Ç–µ–∫. –ú—ã —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –µ–≥–æ –Ω–∞ %s.

                –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫.""", email);
    }

    @Override
    public String sorryError() {
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...";
    }

    @Override
    public String sorryEmailError() {
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ... –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –µ—â–µ —Ä–∞–∑.";
    }

    @Override
    public String enterEmail() {
        return "–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã " +
                "—Å –¥–æ–º–µ–Ω–æ–º @innopolis.university —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞.";
    }

    @Override
    public String authorized() {
        return "–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É.";
    }

    @Override
    public String actualBookings(List<Booking> bookings) {
        if (bookings.isEmpty()) {
            return "\uD83D\uDD12 –£ –í–∞—Å –Ω–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π\n";
        }
        return "\uD83D\uDD10 –£ –í–∞—Å –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n";
    }

    @Override
    public String chooseBookingTime() {
        return "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –±—Ä–æ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–î–î.–ú–ú.–ì–ì –ß–ß:–ú–ú' (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)";
    }

    @Override
    public String invalidBookingTime() {
        return "–í–≤–µ–¥–µ–Ω–∞—è –¥–∞—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã \uD83D\uDE22 –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
    }

    @Override
    public String chosenBookingTime(String time, String duration) {
        return String.format("–ò—â—É –∫–æ–º–Ω–∞—Ç—ã, —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å %s –≤ —Ç–µ—á–µ–Ω–∏–∏ %s –º–∏–Ω—É—Ç...", time, duration);
    }

    @Override
    public String chooseBookingDuration() {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—Ä–æ–Ω–∏.";
    }

    @Override
    public String noAvailableRooms() {
        return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –Ω–µ—Ç.";
    }

    @Override
    public String hereAvailableRooms() {
        return "–°–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É.";
    }

    @Override
    public String chosenRoom(String name) {
        return String.format("–í—ã –≤—ã–±—Ä–∞–ª–∏ %s.", name);
    }

    @Override
    public String bookingTitle() {
        return "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π –±—Ä–æ–Ω–∏";
    }

    @Override
    public String bookedSuccessfully(String title, String room, String since, String until) {
        return String.format(
                "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ '%s' –≤ %s, %s - %s —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!",
                title, room, since, until);
    }

    @Override
    public String bookedUnsuccessfully() {
        return "–ü–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏—á–∏–Ω–∞–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å ‚òπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞!";
    }

    @Override
    public String unexpectedErrorGoToMenu() {
        return "–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è... –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é...";
    }

    @Override
    public String goToMenu() {
        return "–ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...";
    }

    @Override
    public String bookingInterfaceClosed() {
        return "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫—Ä—ã—Ç.";
    }

    @Override
    public String bookingConfirmed() {
        return "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!";
    }

    @Override
    public String bookingRevoked() {
        return "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ";
    }

    @Override
    public String newBookingBtn() {
        return "\uD83D\uDD0F –ù–æ–≤–∞—è –±—Ä–æ–Ω—å";
    }

    @Override
    public String myReservationsBtn() {
        return "\uD83D\uDD10 –ú–æ–∏ –±—Ä–æ–Ω–∏";
    }

    @Override
    public String changeLanguage() {
        return "üá¨üáß –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫";
    }

    @Override
    public String abortAndToMenu() {
        return "–ü—Ä–µ—Ä—ã–≤–∞—é –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –ø–µ—Ä–µ—Ö–æ–∂—É –≤ –º–µ–Ω—é...";
    }

    @Override
    public String languageChanged() {
        return "–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.";
    }

    @Override
    public InlineKeyboardMarkup languageSelection() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("\uD83C\uDDF7\uD83C\uDDFA Russian").
                        callbackData("language rus"),
                new InlineKeyboardButton("\uD83C\uDDEC\uD83C\uDDE7 English").
                        callbackData("language eng")
        );
    }

    @Override
    public String fullBookingInfo(Booking booking) {
        return String.format("'%s' –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –≤ %s —Å %s –¥–æ %s",
                booking.title,
                booking.room.name,
                DateTime.formatToConvenient(booking.start),
                DateTime.formatToConvenient(booking.end));
    }

    @Override
    public String goToBookings() {
        return "–ü–µ—Ä–µ—Ö–æ–∂—É –∫ –í–∞—à–∏–º –±—Ä–æ–Ω—è–º...";
    }

    @Override
    public ReplyKeyboardMarkup mainMenuMarkup() {
        return new ReplyKeyboardMarkup(
                new KeyboardButton[]{
                        new KeyboardButton(newBookingBtn()),
                        new KeyboardButton(myReservationsBtn())
                },
                new KeyboardButton[]{
                        new KeyboardButton(changeLanguage())
                }
        ).resizeKeyboard(true);
    }

    @Override
    public InlineKeyboardMarkup availableRoomsKeyboard(List<Room> rooms) {
        var roomButtons = rooms.stream().
                map(room ->
                        new InlineKeyboardButton[]{
                                new InlineKeyboardButton(room.name).callbackData(room.id)}).
                toArray(InlineKeyboardButton[][]::new);
        return new InlineKeyboardMarkup(roomButtons);
    }

    @Override
    public InlineKeyboardMarkup bookingDurations() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton[]{
                        new InlineKeyboardButton("30 –º–∏–Ω—É—Ç").callbackData("30"),
                        new InlineKeyboardButton("60 –º–∏–Ω—É—Ç").callbackData("60"),
                        new InlineKeyboardButton("90 –º–∏–Ω—É—Ç").callbackData("90")
                },
                new InlineKeyboardButton[]{
                        new InlineKeyboardButton("120 –º–∏–Ω—É—Ç").callbackData("120"),
                        new InlineKeyboardButton("150 –º–∏–Ω—É—Ç").callbackData("150"),
                        new InlineKeyboardButton("180 –º–∏–Ω—É—Ç").callbackData("180")
                }
        );
    }

    @Override
    public InlineKeyboardMarkup userBookings(List<Booking> bookings) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        for (Booking booking : bookings) {
            markup.addRow(
                    new InlineKeyboardButton(booking.title).
                            callbackData(String.format("info %s", booking.id)),
                    new InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå").
                            callbackData(String.format("cancel %s", booking.id)));
        }
        markup.addRow(new InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥").callbackData("back"));
        return markup;
    }

    @Override
    public InlineKeyboardMarkup changeEmail() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("\uD83D\uDCE8 –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é –ø–æ—á—Ç—É").callbackData("update")
        );
    }

    @Override
    public InlineKeyboardMarkup bookingConfirmation(Booking booking) {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å").callbackData(String.format("confirm %s", booking.id)),
                new InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å").callbackData(String.format("revoke %s", booking.id))
        );
    }

    @Override
    public String upcomingBooking(Booking booking) {
        return String.format("""
                        –£ –í–∞—Å –µ—Å—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç ‚Äî '%s' –≤ %s —Å %s –¥–æ %s.
                                        
                        –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –∏–Ω–∞—á–µ –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–æ.""",
                booking.title,
                booking.room.name,
                DateTime.formatToConvenient(booking.start),
                DateTime.formatToConvenient(booking.end));
    }

    @Override
    public String unconfirmedBookingCancel(Booking booking) {
        return String.format("–ù–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ '%s' –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.", booking.title);
    }
}
